
##------GIT and GITHUB---------


Repository -- we store files in a folder,photos in an album, so hence we store code files in a repository


* git init --> to initialize the git repository in directory which will create .git folder inside directory

* ls --> show files in the folder

* ls -a --> to show hidden folders

* git status --> tell you any changed files or untracked files

* git add <file name> --> add file to staging area

* git add . --> to add all files to staging area

* git rm --cached -r . --> to remove all the files from staging area

* git commit -m "changes description" --> to commit changes to the file with a message on what changes are made

* git log --> date and time about the commited files

********************************************************************************
# git add pushes files to the staging area
and we need staging area to ensure every file needed to commit are staged or not
# we commit the files in staging area once we are happy about out staged data  
# after we commit file moves to local repository
********************************************************************************

* git diff <filename> --> is used to check the differnce in the file after it is modified 

* git checkout <filename> --> is used to roll back to the previous version of the file

* git remote add origin <remote repo link>
* git branch -M main			//3 lines to push local repo to remote repo (github)
* git push -u origin main

********************************************************************************
# Git ignore

*helps to prevent certain files to not commit such as passwords and API keys

*touch .gitignore --> a file that conatins all the files/folder names not to be commited
#(inside .gitignore) *.txt --> ignores all files with .txt extension
*every file name should be in new line to make it ignore

********************************************************************************

# Git Cloning

* command to pull down all the version of remote repository to working directory
* git clone <link to repo> --> will clone the github repository to local computer

********************************************************************************

# Git Branching and Merging

* Branches - 1-----2----------3---------------4-----------5
		    ````               `````
			````3-----4````

"in this example suppose we are working on a project at point 2 and then i feel like experimenting with it while continuing the basic working of the project
so i create a brach 3 to work on experiment and other base branch 3 keeps on working as it is
if i found the expermint brach with 3 and 4 commited brach fruitful then i will merge the 4th branch with the base 4th brach"

## you only commit the experimental branch with master branch when you feel like the feature or experiment is really working out


* git branch <name of new branch>  --> create a branch
* git branch -> to know what branch u ar working on
* git checkout <name of branch> -> to change working branch
--
when you make changes in second branch and you commit them and then when you checout to main branch again the files will have same data as changes from branch will not reflect when on main branch

## we do not push changes in experimental second brach to remote repo unless it is offical 
and we do it by mergin it in main and then push to remote repo

--
to merge changes -- first change branch to main/master

* git merge <branch name> -> to merge a branch to main

doing it in github is more easy do try 
we can even compare changes in github 
********************************************************************************


# Git Forking and Pull request

* forking mean making a copy of remote repoisitory in github , so that you can manage the repository and work on it without afffecting the orignal repo

then you will work on that repo locally and make some feature 
then you will push the changes to remote repo
after that 
you will make a pull request to the owner of orignal repo to show them your updates and if they feel like the changes are great for them then they will merge you pull requet

* pull request is when you make some changes and you ask the owner of the repo to look at the changes i have made and if they are friut full then merge the changes made by me and the owner will merge the changes

********************************************************************************

---Important points---

to create a copy of a project to do experiment in remote repository - git branch
to create a copy of a project to do experiment in local repository - git clone